.image {
    height:250px;
    width:250px;
    /* 指定由@keyframes描述的关键帧名称。 */
    animation-name: rainbow;
    /* 设置动画一个周期的时长 */
    animation-duration: 1s;
    /* 设置动画速度， 即通过建立加速度曲线，设置动画在关键帧之间是如何变化。 */
    animation-timing-function:linear;
    /* 设置延时，即从元素加载完成之后到动画序列开始执行的这段时间 */
    animation-delay: 1s;
    /* 指定动画执行前后如何为目标元素应用样式。 */
    animation-fill-mode:forwards;
    /* 设置动画在每次运行完后是反向运行还是重新回到开始位置重复运行 */
    animation-direction: normal;
    /* 设置动画重复次数， 可以指定infinite无限次重复动画 */
    animation-iteration-count: infinite;
    /* position: absolute; */
    /* animation-play-state 允许暂停和恢复动画。 */
}

/* transition的优点在于简单易用，但是它有几个很大的局限。 */
/* 
transition需要事件触发，所以没法在网页加载时自动发生
transition是一次性的，不能重复发生，除非一再触发
transition只能定义开始状态和结束状态，不能定义中间状态，也就是说只有两个状态
一条transition规则，只能定义一个属性的变化，不能涉及多个属性
 */

@keyframes rainbow {
    0% { 
        height:250px;
        width:250px;
        transform: rotate(0deg);
    }
    50% { 
        height:450px;
        width:450px; 
        transform: rotate(180deg);
    }
    100% { 
        height:250px;
        width:250px; 
        transform: rotate(360deg);
    }
  }